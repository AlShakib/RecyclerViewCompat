/*
 * MIT License
 *
 * Copyright (c) 2021 Al Shakib (shakib@alshakib.dev)
 *
 * This file is part of Recycler View Compat
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

ext {
    // Developer information
    developerId = 'AlShakib'
    developerName = 'Al Shakib'
    developerEmail = 'shakib@alshakib.dev'

    // Library information
    libraryName = 'RecyclerViewCompat'
    libraryDescription = 'Recycler View Compat (rvcompat) is a flexible compatible library for recycler view adapter and view holder with support of OnClickListener, OnLongClickListener and many more.'
    libraryVersion = "$project_version_name"
    libraryWebsiteUrl = 'https://github.com/AlShakib/RecyclerViewCompat'
    libraryIssueTrackerUrl = 'https://github.com/AlShakib/RecyclerViewCompat/issues'
    libraryVcsUrl = 'https://github.com/AlShakib/RecyclerViewCompat.git'
    libraryLicenseName = 'MIT License'
    libraryLicenseUrl = 'https://github.com/AlShakib/RecyclerViewCompat/blob/main/LICENSE'

    // Bintray information
    bintrayRepo = 'RecyclerViewCompat'
    bintrayPackageName = 'dev.alshakib.rvcompat'
    bintrayArtifactId = 'rvcompat'
    bintrayLicenses = ['MIT']
    bintrayLabels = ['android', 'library', 'recyclerview']
    bintrayPublish = true
    bintrayPublicDownloadNumbers = false
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    configurations.implementation.setCanBeResolved(true)
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator)) + configurations.implementation
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect {
        variant -> variant.javaCompileProvider.get().classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
version = libraryVersion
group = bintrayPackageName // Maven Group ID for the artifact
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId bintrayPackageName
                artifactId bintrayArtifactId
                name libraryName
                description libraryDescription
                url libraryWebsiteUrl

                licenses {
                    license {
                        name libraryLicenseName
                        url libraryLicenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection libraryVcsUrl
                    developerConnection libraryVcsUrl
                    url libraryVcsUrl
                }
            }
        }
    }
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayPackageName
        desc = libraryDescription
        websiteUrl = libraryWebsiteUrl
        issueTrackerUrl = libraryIssueTrackerUrl
        vcsUrl = libraryVcsUrl
        licenses = bintrayLicenses
        labels = bintrayLabels
        publish = bintrayPublish
        publicDownloadNumbers = bintrayPublicDownloadNumbers
        version {
            name = libraryVersion
            released  = new Date()
            gpg {
                sign = true // Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                // Optional. The passphrase for GPG signing'
            }
        }
    }
}
